plugins {
    id 'java'
    id 'java-library'
}

allprojects {
    apply plugin: 'java'

    group = 'me.nighter'
    version = '1.2.2'

    repositories {
        mavenCentral()
        maven { name = "papermc-repo"; url = "https://repo.papermc.io/repository/maven-public/" }
        maven { name = "sonatype"; url = "https://oss.sonatype.org/content/groups/public/" }
        maven { name = "opencollabRepositoryMain"; url = "https://repo.opencollab.dev/main" }
        maven { name = "jitpack"; url = "https://jitpack.io" }
        maven { name = "enginehub"; url = "https://maven.enginehub.org/repo/" }
        maven { name = "glaremasters repo"; url = "https://repo.glaremasters.me/repository/towny/" }
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT'
    compileOnly 'org.geysermc.floodgate:api:2.2.4-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.13-SNAPSHOT'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.4.0-SNAPSHOT'
    compileOnly 'com.github.brcdev-minecraft:shopgui-api:3.0.0'
    compileOnly 'com.palmergames.bukkit.towny:towny:0.101.1.2'
    implementation 'net.kyori:adventure-api:4.18.0'
    implementation 'net.kyori:adventure-text-minimessage:4.18.0'
    implementation 'com.github.Gypopo:EconomyShopGUI-API:1.7.3'
    implementation 'com.github.maiminhdung:zShop-API:9cb1b3e140'
    implementation 'com.github.GriefPrevention:GriefPrevention:17.0.0'
    implementation 'com.github.IncrediblePlugins:LandsAPI:7.10.13'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

jar {
    archiveBaseName.set("SmartSpawner")
    archiveVersion.set("${version}")
    //destinationDirectory = file('C:\\Users\\ADMIN\\OneDrive\\Desktop\\TestServer\\plugins\\')

    // Combine subprojects
    from {
        subprojects.collect { project ->
            project.sourceSets.main.output
        }
    }

    from sourceSets.main.output

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    // Exclude unnecessary files
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}
