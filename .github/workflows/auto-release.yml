name: Build and Auto Release

on:
  push:
    branches:
      - main
    paths:
      - 'build.gradle'

jobs:
  check-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Get Version
        id: get_version
        run: |
          VERSION=$(grep "version = '" build.gradle | cut -d"'" -f2)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: tag_check
        run: |
          if [ $(git tag -l "v${{ env.VERSION }}") ]; then
            echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
          else
            echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Tag
        if: steps.tag_check.outputs.TAG_EXISTS == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ env.VERSION }}" -m "Release version ${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Build with Gradle
        run: ./gradlew build

      - name: Delete existing release if exists
        if: steps.tag_check.outputs.TAG_EXISTS == 'true'
        run: |
          gh release delete "v${{ env.VERSION }}" -y || true
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create/Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.VERSION }}"
          name: "Release v${{ env.VERSION }}"
          files: build/libs/*.jar
          generate_release_notes: true
          draft: false
          prerelease: false